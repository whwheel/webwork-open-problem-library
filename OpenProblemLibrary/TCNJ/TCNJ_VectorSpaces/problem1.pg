## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS('vectors' 'span')
## Tagged by tda2d

## DBsubject('Linear Algebra')
## DBchapter('Vector Spaces')
## DBsection('Subspaces')
## Date('')
## Author('')
## Institution('TCNJ')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGmatrixmacros.pl", 
"PGnumericalmacros.pl",
"parserMultiAnswer.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$ans1 = non_zero_random(-5,5,1);
$ans2 = non_zero_random(-5,5,1);
$ans3 = non_zero_random(-5,5,1);

$v1 = new Matrix(3,1);
$v1->assign(1,1, $ans1);
$v1->assign(2,1, $ans2);
$v1->assign(3,1, $ans3);

if($ans1==1){
   $str1 = "s";}
elsif($ans1==-1){
   $str1 = "-s";}
else{
   $str1 = $str1 . "$ans1";
   $str1 = $str1 . "s";}

if($ans2==1){
   $str2 = "s";}
elsif($ans2==-1){
   $str2 = "-s";}
else{
   $str2 = $str2 . "$ans2";
   $str2 = $str2 . "s";}

if($ans3==1){
   $str3 = "s";}
elsif($ans3==-1){
   $str3 = "-s";}
else{
   $str3 = $str3 . "$ans3";
   $str3 = $str3 . "s";}

$answervec = MultiAnswer( Compute($ans1), Compute($ans2), Compute($ans3) )->with(
        singleResult=>1,
        checker=> sub {
            my ( $c, $s, $ans ) = @_;
            my @sans = @$s;
            my $zero = Compute(0);
            if ( $zero == $sans[0] && $zero == $sans[1] && $zero == $sans[2] ) {
                return 0;
            } else {
                return ($c->[0]*$sans[1])==($c->[1]*$sans[0]) && ($c->[0]*$sans[2])==($c->[2]*$sans[0]);
            }
        } );


BEGIN_TEXT

\{ mbox( 'Let \(H\) be the set of all vectors of the form: ', display_matrix([[$str1],[$str2],[$str3]]), '.' ) \}
Find a vector \(v\) in \( {\mathbb R}^3\) such that \( H=\text{Span}\left\{"\{"\} v\right\} \).
$BR  
\{ mbox( ' \(v=\)', display_matrix([[$answervec->ans_rule(5)],[$answervec->ans_rule(5)], [$answervec->ans_rule(5)]]), '.' ) \}

END_TEXT

ANS($answervec->cmp());

ENDDOCUMENT();       # This should be the last executable line in the problem.
